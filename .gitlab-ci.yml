image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/viaduck/ci

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  ANDROID_PLATFORM: "android-29"

stages:
    - build
    - lint
    - test
    - coverage
    - documentation

build:linux:x86_64:full:
    stage: build
    script:
        - mkdir build
        - cd build
        - cmake -GNinja ../ -DPREBUILT_BRANCH=x86_64-linux -DGTEST_SRC_DIR=/usr/src/googletest/
        - ninja
    artifacts:
        expire_in: 2h
        paths:
            - build/

lint:linux:x86_64:full:
    stage: lint
    script:
        - vd-lint Commons $PWD
    needs:
        - job: build:linux:x86_64:full
          artifacts: false

test:linux:x86_64:full:
    variables:
          GIT_STRATEGY: none
    stage: test
    script:
        - cd build
        - test/commons_test
    needs:
        - build:linux:x86_64:full

build:linux:x86_64:full:system-openssl:
    stage: build
    script:
        - mkdir build
        - cd build
        - cmake -GNinja ../ -DSYSTEM_OPENSSL=ON -DGTEST_SRC_DIR=/usr/src/googletest/
        - ninja
    artifacts:
        expire_in: 2h
        paths:
            - build/

test:linux:x86_64:full:system-openssl:
    variables:
          GIT_STRATEGY: none
    stage: test
    script:
        - cd build
        - test/commons_test
    needs:
        - build:linux:x86_64:full:system-openssl

build:linux:x86_64:base-only:
    stage: build
    script:
        - mkdir build
        - cd build
        - cmake -GNinja ../ -DCOMMONS_BASE_ONLY=ON -DGTEST_SRC_DIR=/usr/src/googletest/
        - ninja
    artifacts:
        expire_in: 2h
        paths:
            - build/

test:linux:x86_64:base-only:
    variables:
          GIT_STRATEGY: none
    stage: test
    script:
        - cd build
        - test/commons_test
    needs:
        - build:linux:x86_64:base-only

coverage:linux:x86_64:
    stage: coverage
    script:
        - cd build
        - cmake . -DCMAKE_BUILD_TYPE=Debug -DVIADUCK_COVERAGE=ON
        - ninja commons_test_coverage
    artifacts:
        paths:
            - build/commons_test_coverage/
    needs:
        - build:linux:x86_64:full

documentation:linux:x86_64:
    stage: documentation
    script:
        - cd build
        - ninja commons_doc
    artifacts:
        paths:
            - build/doc/html/
    needs:
        - build:linux:x86_64:full

build:windows:x86_64:full:
    image: viaduck/ci:mingw
    stage: build
    script:
        - update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix        # fix c++11 threading support on debian
        - update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        - mkdir build-windows-x86_64
        - cd build-windows-x86_64
        - cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../external/secure_memory/cmake-modules/toolchains/mingw64-x86_64.cmake -DPREBUILT_BRANCH=x86_64-w64-mingw32 -DGTEST_SRC_DIR=/usr/src/googletest/ ../
        - ninja
        - peldd test/commons_test.exe | grep -vE '\.exe$' | xargs cp -t .
    artifacts:
        expire_in: 2h
        paths:
            - build-windows-x86_64/

build:windows:x86_64:base-only:
    image: viaduck/ci:mingw
    stage: build
    script:
        - update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix        # fix c++11 threading support on debian
        - update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        - mkdir build-windows-x86_64
        - cd build-windows-x86_64
        - cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../external/secure_memory/cmake-modules/toolchains/mingw64-x86_64.cmake -DCOMMONS_BASE_ONLY=ON -DGTEST_SRC_DIR=/usr/src/googletest/ ../
        - ninja

test:windows:x86_64:full:
    variables:
      GIT_STRATEGY: none
    stage: test
    script:
        - cd build-windows-x86_64
        - test\commons_test.exe
    needs:
        - build:windows:x86_64:full
    tags:
        - windows

build:android:arm64-v8a:full:
    image: viaduck/ci:android
    stage: build
    script:
        - mkdir build-android-arm64-v8a
        - cd build-android-arm64-v8a
        - cmake -GNinja -DANDROID_PLATFORM=$ANDROID_PLATFORM -DANDROID_ABI=arm64-v8a -DANDROID_TOOLCHAIN=clang -DANDROID_NDK=$ANDROID_NDK -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_STL=c++_static -DPREBUILT_BRANCH=arm64-v8a-android -DGTEST_SRC_DIR=/usr/src/googletest/ ../
        - ninja
    artifacts:
        expire_in: 2h
        paths:
            - build-android-arm64-v8a/

build:android:armeabi-v7a:full:
    image: viaduck/ci:android
    stage: build
    script:
        - mkdir build-android-armeabi-v7a
        - cd build-android-armeabi-v7a
        - cmake -GNinja -DANDROID_PLATFORM=$ANDROID_PLATFORM -DANDROID_ABI=armeabi-v7a -DANDROID_TOOLCHAIN=clang -DANDROID_NDK=$ANDROID_NDK -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_STL=c++_static -DPREBUILT_BRANCH=armeabi-v7a-android -DGTEST_SRC_DIR=/usr/src/googletest/ ../
        - ninja
    artifacts:
        expire_in: 2h
        paths:
            - build-android-armeabi-v7a/

build:android:x86_64:full:
    image: viaduck/ci:android
    stage: build
    script:
        - mkdir build-android-x86_64
        - cd build-android-x86_64
        - cmake -GNinja -DANDROID_PLATFORM=$ANDROID_PLATFORM -DANDROID_ABI=x86_64 -DANDROID_TOOLCHAIN=clang -DANDROID_NDK=$ANDROID_NDK -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_STL=c++_static -DPREBUILT_BRANCH=x86_64-android -DGTEST_SRC_DIR=/usr/src/googletest/ ../
        - ninja
    artifacts:
        expire_in: 2h
        paths:
            - build-android-x86_64/
